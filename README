NAME
BioinformaticScraps

DESCRIPTION
A random, unorganized collection of my bits and pieces for processing bioinformatics data


AFLP SCRIPTS:

pafreq.pl    This script summarizes the dominant allele frequencies for each population in an AFLP dataset, where 1 indicates presence of a band and 2 indicates lack of a band.  Sample names must be in the form taxon-population-individual.  Data must be sorted so each population is together.  Data must be whitespace delimited with a header row containing the names of the loci.  Missing data may cause problems.

ppfreq.pl    This script summarizes the phenotype frequencies for each population in an AFLP dataset, where 1 indicates presence of a band and 2 indicates lack of a band.  Sample names must be in the form taxon-population-individual.  Data must be sorted so each population is together.  Data must be whitespace delimited with a header row containing the names of the loci.  Missing data may cause problems.

tafreq.pl    This script summarizes the dominant allele frequencies for each population and taxon in an AFLP dataset, where 1 indicates presence of a band and 2 indicates lack of a band.  Sample names must be in the form taxon-population-individual.  Data must be sorted so each taxon is together.  Data must be whitespace delimited with a header row containing the names of the loci.  Missing data may cause problems.

tpfreq.pl    This script summarizes the phenotype frequencies for each population and taxon in an AFLP dataset, where 1 indicates presence of a band and 2 indicates lack of a band.  Sample names must be in the form taxon-population-individual.  Data must be sorted so each taxon is together.  Data must be whitespace delimited with a header row containing the names of the loci.  Missing data may cause problems.


COALESCENCE SCRIPTS:

coalesce.pl    This script simulates the effects of drift on a population of asexual organisms with non-overlapping generations and no selection.  Each individual has randomly contributes 0, 1, or 2 offspring to the next generation with no limits on the size of the resulting population.  In each generation you can see which individuals are descended from which individual in the starting population.  Both the size of the population and the proportion descended from each starting individual should respond to drift.

coalesce2.pl    This script simulates the effects of drift on a population of asexual organisms with non-overlapping generations and no selection.  There are no limits on the number of offspring any individual can have but the population size is fixed.  In each generation you can see which individuals are descended from which individual in the starting population.  The proportion descended from each starting individual should respond to drift.

coalesce3.pl    This script simulates the effects of drift on a population of asexual organisms with non-overlapping generations and no selection.  There are no limits on the number of offspring any individual can have but the population size is fixed.  This script runs multiple simulation replicates and tracks the number of generations to fixation in each replicate.  Then it plots a histogram of those values.

truecoalesce.pl    Unlike my previous "coalescent" scripts, this one actually models coalescence as opposed to drift and lineage sorting.  It calculates the time to coalescence and the time to get to the last 2 lineages, so you can see how much of the time was spent waiting for the last two lineages to coalesce.  You can select a sample size separate from the population size.


ALIGNMENT/CONSENSUS SEQUENCE SCRIPTS

consaminocount.pl    This script takes a consensus sequence (with X's for ambiguous characters) in fasta format and counts the number of ambiguous characters (i.e., nonconserved characters) in each block of 50 aminoacids.

conscount.pl    This script takes a consensus sequence in fasta format with ambiguous characters and counts the number of ambiguous characters (i.e., nonconserved characters) in each block of 50 nucleotides.


BLAST SCRIPTS

countblastqueries.pl    This script finds the number of different blast queries that had hits in tabular blast output.  The list must be sorted by query.  Usage- I have a list of 7500 blast hits against my adiantum/angiopteris genes database.  I want to know how many of the queries in the original blast input file had at least one match in the database.

countgenes.pl    This script finds the number of different genes (sources) in tabular blast output.  The list must be sorted by gene (source) name.  Usage- I have a list of 7500 blast hits against my adiantum/angiopteris genes database.  I want to know how many different genes I have matches in.


FASTA FILE SCRIPTS

fastaclean.pl    This script takes messy fasta files (with numbers or whitespace) and converts them into clean fasta files

fastarename.pl    This script takes fasta files with Genbank names (gi|xxxxxxx|) and coverts the names to 4 letters for the genus and 4 letters for the species epithet.  This is a quick and dirty modification of my fastaclean script.

filterfasta.py    This script takes a file of fasta sequences and a file listing the sequences wanted and pulls just those sequences (or everything other than those sequences) from the fasta file.  A first simple script using biopython.

fastadiff.py    This script performs a bi-directional comparison of two fasta files and returns the id's of sequences in one but missing from the other.  Surprisingly quick for even large fasta files.

fastaname.pl    Just takes a fasta file and returns a list of the sequence id's.


GENOME FILE SCRIPTS

listgenes2.pl    This script filters ncbi genome files and returns just the gene names, locations, and orientations (1-forward, 0-reverse).  ***WARNING*** This script will miss any exons beyond the first two.  Manually check for genes with 2 or more introns!

listgenesfasta.pl    This script filters an ncbi genome file and a genome fasta file and returns a fasta file of the genes.  For genes with 2 exons and an intron, it returns the sequence of both exons with the intron, not separate entries for each exon.
Known Issues: 1) It behaves strangely for genes like ndhB that have one exon at the start of the genome sequence and the other at the end.  You can fix those manually, or cheat by modifying the genbank file.  2) Genes with more than two exons will also cause problems.  They won't appear in the output.  3) Do fasta files allow line breaks within the sequence?  If your fasta file has line breaks within the sequence, only the data up to the first line break will be captured.  You can use my fastaclean.pl script to remove extra line breaks from a fasta file.

structure2fasta.pl    This script takes the output of garnier (from the emboss package) and converts it to a fasta-like output so secondary structures can be aligned using alignment programs.  Hey- I'm not claiming this is really useful...


MISC SCRIPTS

adjacentpairs.pl    This script determines which pairs of adjacent genes in the first file are also present in the second file.  The order of the genes in the pairs matters- they must be transcribed in the same order.  Both files must be formatted with two genenames in each row separated by white space.

findprimer.pl    This script: 1) Performs a multiple nucleotide alignment using clustalw.  2) Finds all primers with a length range with min conserved 3' and max# of nonconserved nucleotides.  3) Filters out primers that don't fall within specified Tm and GC content ranges.  4) Searches against the Lab Database for equivalent primers.  5) Outputs to standard output, a fasta format file and a amplifx primer list format file.
Input file requirements: 1) fasta file with at least two sequences.  2) text file called LabPrimerDatabase.txt containing a primer database in the format:
        sequence  reference   any other additional columns
This script generates the following files (and clobbers them if they already exist):
   tempalign.aln  *
   tempprimer.txt  *
   temprev.txt  *
   tempgc.txt  *          *Removed after use
   goodprimers.txt
   amplifxfile.txt
The following programs must be in your PATH:
   clustalw

pop2struct.pl    This script converts a genepop input file to a structure input file.  It only works on files with a specific number of loci and the same number of digits in each allele record.

unique.pl    This script finds the unique items in 2 files containing a list of genes.  The files must be lists with a single gene name starting each row (the output from my listgenes.pl script for example).  Any other information on the line will be ignored.  This script does not compare the files very efficiently so it may take a while for very long files.
